{
	"build": {
		"dockerfile": "./Dockerfile",
		"context": "."
	},
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": "true",
			"username": "vscode",
			"userUid": "1000",
			"userGid": "1000",
			"upgradePackages": "true"
		},
		"ghcr.io/devcontainers/features/git:1": {
            "version": "latest",
            "ppa": "false"
        }
	},	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001],
	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Do one of the following depending on your scenario:
	//    * When using GitHub Codespaces and/or Remote - Containers:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	//
	//    * If only using Remote - Containers with a local container, uncomment this line instead:
	//      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet restore",
	// Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
    "customizations": {
      "vscode": {
        "settings": {},
        "extensions": [
          "ms-python.python", 
          "charliermarsh.ruff", 
          "GitHub.copilot",
		  "anthropic.claude-code",
          "ms-vscode-remote.remote-containers",
          "ms-toolsai.jupyter",
          "eamodio.gitlens",
          "yzhang.markdown-all-in-one",
          "tamasfe.even-better-toml",
		  "quarto.quarto",
        ]
      }
    },	
	"postCreateCommand": "pixi install --locked",
}



// {
//     "name": "my-project",
//     "build": {
//       "dockerfile": "Dockerfile",
//       "context": "..",
//       // "options": [
//       //     "--secret",
//       //     "id=prefix_dev_token,env=PREFIX_DEV_TOKEN",
//       // ],      
//     },
// //    "remoteUser": "vscode", // this must match the USER in the Dockerfile
//     "customizations": {
//       "vscode": {
//         "settings": {},
//         "extensions": [
//           "ms-python.python", 
//           "charliermarsh.ruff", 
//           "GitHub.copilot",
//           "ms-vscode-remote.remote-containers",
//           "ms-toolsai.jupyter",
//           "eamodio.gitlens",
//           "yzhang.markdown-all-in-one",
//           "tamasfe.even-better-toml",				
//         ]
//       }
//     },
//     // "features": {
//     //   "ghcr.io/devcontainers/features/docker-in-docker:2": {}
//     // },
//     // "mounts": ["source=${localWorkspaceFolderBasename}-pixi,target=${containerWorkspaceFolder}/.pixi,type=volume"],
//     // "postCreateCommand": "sudo chown vscode .pixi && pixi install",
// }
